paths:
  /projects:
    get:
      tags:
        - Projects
      summary: Get all projects
      description: Retrieve a paginated list of all projects
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: List of projects successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      total:
                        type: integer
                        example: 45
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 5
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - Projects
      summary: Create new project
      description: Create a new project record
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - projectName
                - customerId
                - facilityId
                - startDate
              properties:
                projectName:
                  type: string
                  example: 'Annual LDAR Compliance Survey 2024'
                projectCode:
                  type: string
                  example: 'HPP-LDAR-2024'
                customerId:
                  type: string
                  format: uuid
                  example: '123e4567-e89b-12d3-a456-426614174000'
                facilityId:
                  type: string
                  format: uuid
                  example: '234e5678-e89b-12d3-a456-426614174001'
                projectType:
                  type: string
                  enum:
                    [
                      'LDAR',
                      'Emissions',
                      'Compliance',
                      'Remediation',
                      'Monitoring',
                      'Consulting',
                      'Other',
                    ]
                  example: 'LDAR'
                status:
                  type: string
                  enum: ['Planning', 'InProgress', 'OnHold', 'Completed', 'Cancelled']
                  example: 'InProgress'
                description:
                  type: string
                  example: 'Comprehensive annual LDAR compliance survey for the Houston Processing Plant, including all required regulatory monitoring and reporting'
                startDate:
                  type: string
                  format: date
                  example: '2024-02-15'
                endDate:
                  type: string
                  format: date
                  example: '2024-05-30'
                timeline:
                  type: object
                  properties:
                    milestones:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Initial Site Assessment'
                          dueDate:
                            type: string
                            format: date
                            example: '2024-02-28'
                          status:
                            type: string
                            enum: ['NotStarted', 'InProgress', 'Completed', 'Overdue']
                            example: 'Completed'
                          description:
                            type: string
                            example: 'Site walkthrough and assessment of all monitoring areas'
                    estimatedDuration:
                      type: integer
                      example: 105
                    durationUnit:
                      type: string
                      example: 'days'
                scope:
                  type: object
                  properties:
                    components:
                      type: object
                      properties:
                        total:
                          type: integer
                          example: 12500
                        monitored:
                          type: integer
                          example: 8750
                        excluded:
                          type: integer
                          example: 3750
                    areas:
                      type: array
                      items:
                        type: string
                      example:
                        ['Process Unit A', 'Process Unit B', 'Storage Area', 'Loading Facility']
                    regulatory:
                      type: array
                      items:
                        type: string
                      example: ['EPA Method 21', 'TCEQ 28VHP', 'NSPS OOOOa']
                team:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Sarah Johnson'
                      role:
                        type: string
                        example: 'Project Manager'
                      email:
                        type: string
                        format: email
                        example: 's.johnson@example.com'
                      phone:
                        type: string
                        example: '+1 (555) 123-4567'
                budget:
                  type: object
                  properties:
                    amount:
                      type: number
                      format: float
                      example: 185000
                    currency:
                      type: string
                      example: 'USD'
                    breakdown:
                      type: object
                      properties:
                        labor:
                          type: number
                          format: float
                          example: 120000
                        equipment:
                          type: number
                          format: float
                          example: 35000
                        travel:
                          type: number
                          format: float
                          example: 15000
                        other:
                          type: number
                          format: float
                          example: 15000
                reportingRequirements:
                  type: array
                  items:
                    type: object
                    properties:
                      reportType:
                        type: string
                        example: 'Quarterly LDAR Monitoring Report'
                      dueDate:
                        type: string
                        format: date
                        example: '2024-05-15'
                      agency:
                        type: string
                        example: 'TCEQ'
                      description:
                        type: string
                        example: 'Required quarterly monitoring report for all LDAR components'
                notes:
                  type: string
                  example: 'Project includes additional OGI camera monitoring as requested by the client. Special focus on recently upgraded process units.'
                tags:
                  type: array
                  items:
                    type: string
                  example: ['LDAR', 'Compliance', '2024', 'High Priority']
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Project created successfully'
                  data:
                    $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/{id}:
    get:
      tags:
        - Projects
      summary: Get project by ID
      description: Retrieve a specific project by its ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Project unique identifier
      responses:
        '200':
          description: Project successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      tags:
        - Projects
      summary: Update project
      description: Update an existing project record
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Project unique identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  type: string
                  example: 'Annual LDAR Compliance Survey 2024 - Expanded Scope'
                projectCode:
                  type: string
                  example: 'HPP-LDAR-2024-EXP'
                customerId:
                  type: string
                  format: uuid
                  example: '123e4567-e89b-12d3-a456-426614174000'
                facilityId:
                  type: string
                  format: uuid
                  example: '234e5678-e89b-12d3-a456-426614174001'
                projectType:
                  type: string
                  enum:
                    [
                      'LDAR',
                      'Emissions',
                      'Compliance',
                      'Remediation',
                      'Monitoring',
                      'Consulting',
                      'Other',
                    ]
                  example: 'LDAR'
                status:
                  type: string
                  enum: ['Planning', 'InProgress', 'OnHold', 'Completed', 'Cancelled']
                  example: 'InProgress'
                description:
                  type: string
                  example: 'Expanded comprehensive annual LDAR compliance survey for the Houston Processing Plant, including all required regulatory monitoring, reporting, and additional OGI monitoring for new process units'
                startDate:
                  type: string
                  format: date
                  example: '2024-02-15'
                endDate:
                  type: string
                  format: date
                  example: '2024-06-30'
                timeline:
                  type: object
                  properties:
                    milestones:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Initial Site Assessment'
                          dueDate:
                            type: string
                            format: date
                            example: '2024-02-28'
                          status:
                            type: string
                            enum: ['NotStarted', 'InProgress', 'Completed', 'Overdue']
                            example: 'Completed'
                          description:
                            type: string
                            example: 'Site walkthrough and assessment of all monitoring areas'
                    estimatedDuration:
                      type: integer
                      example: 135
                    durationUnit:
                      type: string
                      example: 'days'
                scope:
                  type: object
                  properties:
                    components:
                      type: object
                      properties:
                        total:
                          type: integer
                          example: 15000
                        monitored:
                          type: integer
                          example: 10500
                        excluded:
                          type: integer
                          example: 4500
                    areas:
                      type: array
                      items:
                        type: string
                      example:
                        [
                          'Process Unit A',
                          'Process Unit B',
                          'Process Unit C',
                          'Storage Area',
                          'Loading Facility',
                        ]
                    regulatory:
                      type: array
                      items:
                        type: string
                      example: ['EPA Method 21', 'TCEQ 28VHP', 'NSPS OOOOa', 'NSPS OOOOb']
                team:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Sarah Johnson'
                      role:
                        type: string
                        example: 'Project Manager'
                      email:
                        type: string
                        format: email
                        example: 's.johnson@example.com'
                      phone:
                        type: string
                        example: '+1 (555) 123-4567'
                budget:
                  type: object
                  properties:
                    amount:
                      type: number
                      format: float
                      example: 225000
                    currency:
                      type: string
                      example: 'USD'
                    breakdown:
                      type: object
                      properties:
                        labor:
                          type: number
                          format: float
                          example: 145000
                        equipment:
                          type: number
                          format: float
                          example: 42000
                        travel:
                          type: number
                          format: float
                          example: 18000
                        other:
                          type: number
                          format: float
                          example: 20000
                reportingRequirements:
                  type: array
                  items:
                    type: object
                    properties:
                      reportType:
                        type: string
                        example: 'Quarterly LDAR Monitoring Report'
                      dueDate:
                        type: string
                        format: date
                        example: '2024-05-15'
                      agency:
                        type: string
                        example: 'TCEQ'
                      description:
                        type: string
                        example: 'Required quarterly monitoring report for all LDAR components'
                notes:
                  type: string
                  example: 'Project scope expanded to include new process Unit C. Additional personnel added to the team to accommodate expanded scope. OGI camera monitoring increased to bi-weekly for high-risk areas.'
                tags:
                  type: array
                  items:
                    type: string
                  example: ['LDAR', 'Compliance', '2024', 'High Priority', 'Expanded Scope']
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Project updated successfully'
                  data:
                    $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      tags:
        - Projects
      summary: Delete project
      description: Soft delete a project record
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Project unique identifier
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Project deleted successfully'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/customer/{customerId}:
    get:
      tags:
        - Projects
      summary: Get projects by customer
      description: Retrieve all projects associated with a specific customer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
            format: uuid
          description: Customer unique identifier
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: Projects successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      total:
                        type: integer
                        example: 12
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 2
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/facility/{facilityId}:
    get:
      tags:
        - Projects
      summary: Get projects by facility
      description: Retrieve all projects associated with a specific facility
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
            format: uuid
          description: Facility unique identifier
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: Projects successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      total:
                        type: integer
                        example: 5
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 1
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/search:
    get:
      tags:
        - Projects
      summary: Search projects
      description: Search for projects by name, code, or description
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search term to match against project name, code, or description
          required: true
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: Search results successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      total:
                        type: integer
                        example: 8
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 1
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/status/{status}:
    get:
      tags:
        - Projects
      summary: Get projects by status
      description: Retrieve all projects with a specific status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: status
          required: true
          schema:
            type: string
            enum: ['Planning', 'InProgress', 'OnHold', 'Completed', 'Cancelled']
          description: Project status to filter by
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: Projects successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      total:
                        type: integer
                        example: 18
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 2
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/type/{projectType}:
    get:
      tags:
        - Projects
      summary: Get projects by type
      description: Retrieve all projects of a specific type
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectType
          required: true
          schema:
            type: string
            enum:
              [
                'LDAR',
                'Emissions',
                'Compliance',
                'Remediation',
                'Monitoring',
                'Consulting',
                'Other',
              ]
          description: Project type to filter by
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: Projects successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Project'
                      total:
                        type: integer
                        example: 22
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 3
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/{id}/surveys:
    get:
      tags:
        - Projects
      summary: Get project surveys
      description: Retrieve all surveys associated with a specific project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Project unique identifier
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: Surveys successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Survey'
                      total:
                        type: integer
                        example: 32
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 4
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

  /projects/{id}/schedule:
    get:
      tags:
        - Projects
      summary: Get project schedule
      description: Retrieve the detailed schedule for a specific project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Project unique identifier
      responses:
        '200':
          description: Project schedule successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      projectId:
                        type: string
                        format: uuid
                        example: '123e4567-e89b-12d3-a456-426614174000'
                      projectName:
                        type: string
                        example: 'Annual LDAR Compliance Survey 2024'
                      projectCode:
                        type: string
                        example: 'HPP-LDAR-2024'
                      startDate:
                        type: string
                        format: date
                        example: '2024-02-15'
                      endDate:
                        type: string
                        format: date
                        example: '2024-05-30'
                      milestones:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              example: '345e6789-e89b-12d3-a456-426614174002'
                            name:
                              type: string
                              example: 'Initial Site Assessment'
                            dueDate:
                              type: string
                              format: date
                              example: '2024-02-28'
                            completionDate:
                              type: string
                              format: date
                              example: '2024-02-27'
                            status:
                              type: string
                              enum: ['NotStarted', 'InProgress', 'Completed', 'Overdue']
                              example: 'Completed'
                            description:
                              type: string
                              example: 'Site walkthrough and assessment of all monitoring areas'
                            assignedTo:
                              type: array
                              items:
                                type: string
                              example: ['Sarah Johnson', 'Michael Chen']
                      tasks:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              example: '456e7890-e89b-12d3-a456-426614174003'
                            name:
                              type: string
                              example: 'Process Unit A Monitoring'
                            startDate:
                              type: string
                              format: date
                              example: '2024-03-01'
                            endDate:
                              type: string
                              format: date
                              example: '2024-03-15'
                            status:
                              type: string
                              enum: ['NotStarted', 'InProgress', 'Completed', 'Overdue']
                              example: 'Completed'
                            description:
                              type: string
                              example: 'Method 21 monitoring of all components in Process Unit A'
                            assignedTo:
                              type: array
                              items:
                                type: string
                              example: ['John Smith', 'Emily Brown']
                            dependencies:
                              type: array
                              items:
                                type: string
                                format: uuid
                              example: ['345e6789-e89b-12d3-a456-426614174002']
                            progress:
                              type: integer
                              minimum: 0
                              maximum: 100
                              example: 100
                      criticalPath:
                        type: array
                        items:
                          type: string
                          format: uuid
                        example:
                          [
                            '345e6789-e89b-12d3-a456-426614174002',
                            '456e7890-e89b-12d3-a456-426614174003',
                            '567e8901-e89b-12d3-a456-426614174004',
                          ]
                      progressOverview:
                        type: object
                        properties:
                          overallProgress:
                            type: integer
                            minimum: 0
                            maximum: 100
                            example: 65
                          plannedProgress:
                            type: integer
                            minimum: 0
                            maximum: 100
                            example: 70
                          variance:
                            type: integer
                            example: -5
                          milestonesCompleted:
                            type: integer
                            example: 3
                          totalMilestones:
                            type: integer
                            example: 7
                          tasksCompleted:
                            type: integer
                            example: 12
                          totalTasks:
                            type: integer
                            example: 25
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Projects
      summary: Update project schedule
      description: Update the schedule for a specific project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Project unique identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: '2024-02-22'
                endDate:
                  type: string
                  format: date
                  example: '2024-06-15'
                milestones:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: '345e6789-e89b-12d3-a456-426614174002'
                      name:
                        type: string
                        example: 'Initial Site Assessment'
                      dueDate:
                        type: string
                        format: date
                        example: '2024-03-05'
                      status:
                        type: string
                        enum: ['NotStarted', 'InProgress', 'Completed', 'Overdue']
                        example: 'Completed'
                      description:
                        type: string
                        example: 'Extended site walkthrough and assessment of all monitoring areas including new process units'
                      assignedTo:
                        type: array
                        items:
                          type: string
                        example: ['Sarah Johnson', 'Michael Chen', 'Jessica Roberts']
                tasks:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: '456e7890-e89b-12d3-a456-426614174003'
                      name:
                        type: string
                        example: 'Process Unit A Monitoring'
                      startDate:
                        type: string
                        format: date
                        example: '2024-03-08'
                      endDate:
                        type: string
                        format: date
                        example: '2024-03-22'
                      status:
                        type: string
                        enum: ['NotStarted', 'InProgress', 'Completed', 'Overdue']
                        example: 'InProgress'
                      description:
                        type: string
                        example: 'Method 21 monitoring of all components in Process Unit A, including newly installed valves'
                      assignedTo:
                        type: array
                        items:
                          type: string
                        example: ['John Smith', 'Emily Brown', 'Robert Jackson']
                      dependencies:
                        type: array
                        items:
                          type: string
                          format: uuid
                        example: ['345e6789-e89b-12d3-a456-426614174002']
                      progress:
                        type: integer
                        minimum: 0
                        maximum: 100
                        example: 45
      responses:
        '200':
          description: Project schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Project schedule updated successfully'
                  data:
                    type: object
                    properties:
                      projectId:
                        type: string
                        format: uuid
                        example: '123e4567-e89b-12d3-a456-426614174000'
                      projectName:
                        type: string
                        example: 'Annual LDAR Compliance Survey 2024'
                      startDate:
                        type: string
                        format: date
                        example: '2024-02-22'
                      endDate:
                        type: string
                        format: date
                        example: '2024-06-15'
                      updatedMilestones:
                        type: integer
                        example: 7
                      updatedTasks:
                        type: integer
                        example: 25
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
