paths:
  /equipment:
    get:
      tags:
        - Equipment
      summary: Get all equipment
      description: Retrieve a paginated list of all equipment
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: List of equipment successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Equipment'
                      total:
                        type: integer
                        example: 50
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 5
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - Equipment
      summary: Create new equipment
      description: Create a new equipment record
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - equipmentName
                - equipmentType
              properties:
                equipmentName:
                  type: string
                  example: 'Pump Station 1'
                equipmentType:
                  type: string
                  enum: [compressor, pump, valve, tank, vessel, pipeline]
                  example: 'pump'
                locationLatitude:
                  type: number
                  format: double
                  example: 45.4215
                locationLongitude:
                  type: number
                  format: double
                  example: -75.6972
                notes:
                  type: string
                  example: 'Main equipment for north section'
      responses:
        '201':
          description: Equipment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Equipment created successfully'
                  data:
                    $ref: '#/components/schemas/Equipment'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'

  /equipment/{id}:
    get:
      tags:
        - Equipment
      summary: Get equipment by ID
      description: Retrieve a specific equipment by its ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Equipment unique identifier
      responses:
        '200':
          description: Equipment successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Equipment'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    put:
      tags:
        - Equipment
      summary: Update equipment
      description: Update an existing equipment record
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Equipment unique identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                equipmentName:
                  type: string
                  example: 'Updated Pump Station 1'
                equipmentType:
                  type: string
                  enum: [compressor, pump, valve, tank, vessel, pipeline]
                  example: 'pump'
                locationLatitude:
                  type: number
                  format: double
                  example: 45.4215
                locationLongitude:
                  type: number
                  format: double
                  example: -75.6972
                notes:
                  type: string
                  example: 'Updated notes for equipment'
      responses:
        '200':
          description: Equipment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Equipment updated successfully'
                  data:
                    $ref: '#/components/schemas/Equipment'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      tags:
        - Equipment
      summary: Delete equipment
      description: Soft delete an equipment record
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Equipment unique identifier
      responses:
        '200':
          description: Equipment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Equipment deleted successfully'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
